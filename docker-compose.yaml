services:
  users:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.users
      args:
        - IMAGE_TAG=${PHP_IMAGE_TAG}
    container_name: users
    volumes:
      - ./users:/var/www/html:rw
      - ./config/phpcs.xml.example:/var/www/html/phpcs.xml.dist
      - ./config/phpstan.neon.example:/var/www/html/phpstan.neon

  usersdb:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.users.db
      args:
        - IMAGE_TAG=${POSTGRES_IMAGE_TAG}
    environment:
      - POSTGRES_PASSWORD=${USERS_POSTGRES_PASSWORD}
      - POSTGRES_USER=${USERS_POSTGRES_USER}
      - POSTGRES_DB=${USERS_POSTGRES_DB}
    ports:
      - ${USERS_POSTGRES_PORT}:5432
    container_name: users-db

  rabbitmq:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
      args:
        - IMAGE_TAG=${RABBITMQ_IMAGE_TAG}
    ports:
      - ${RABBITMQ_EXTERNAL_PORT}:15672
    container_name: rabbitmq

  nginx:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        - IMAGE_TAG=${NGINX_IMAGE_TAG}
    ports:
      - ${USERS_NGINX_EXTERNAL_PORT}:80
    container_name: nginx
    volumes:
      - ./users:/var/www/html:rw

  auth:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.auth
      args:
        - IMAGE_TAG=${PHP_IMAGE_TAG}
    container_name: auth
    volumes:
      - ./auth:/var/www/html:rw
      - ./config/phpcs.xml.example:/var/www/html/phpcs.xml.dist
      - ./config/phpstan.neon.example:/var/www/html/phpstan.neon
